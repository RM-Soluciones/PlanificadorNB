{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DevOps\\\\Documents\\\\NB\\\\PlanificadorNB\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// App.js\n\nimport React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport { supabase } from './supabaseClient';\nimport \"./App.css\";\nimport Select from 'react-select';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n// Listas de choferes y móviles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst choferesList = [\"SARAPURA\", \"MENDOZA\", \"ROJAS\", \"VELEZ\", \"MAMANI.P\", \"CRUZ \", \"CALA \", \"SALVATIERRA\", \"GUZMAN \", \"CORONEL \", \"SOLIS \", \"RIOS \", \"SANCHEZ\", \"FLORES \", \"MAMANI.F\", \"SERRUDO \", \"YAGO\", \"DE ZUANI\", \"AVENDAÑO \", \"ARJONA \", \"RAVAZA \", \"MARTINEZ \", \"ARRATIA \", \"DIAZ \", \"COPA \", \"SALAS \", \"GALLARDO\", \"APARICIO\", \"GVH\", \"MASTERBUS\", \"FENIX\", \"MAGNO\", \"MAR ANDINO\", \"MARCELO COPA\", \"OTRO\"];\nconst movilesList = [\"M32\", \"M33\", \"M09\", \"M18\", \"M20\", \"M21\", \"M22\", \"M24\", \"M25\", \"M26\", \"M28\", \"M30\", \"M34\", \"M35\", \"M36\", \"M37\", \"M38\", \"M39\", \"M40\", \"M41\", \"M42\", \"GVH\", \"MASTERBUS\", \"FENIX\", \"MAGNO\", \"MAR ANDINO\", \"MARCELO COPA\", \"OTRO\"];\n\n// Crear opciones para react-select\nconst choferesOptions = choferesList.map(chofer => ({\n  value: chofer,\n  label: chofer\n}));\nconst movilesOptions = movilesList.map(movil => ({\n  value: movil,\n  label: movil\n}));\n\n// Opciones de servicio con colores\nconst servicioOptions = [{\n  value: 'IN OUT',\n  label: 'IN OUT',\n  color: '#7FC6E7'\n},\n// CELESTE\n{\n  value: 'SUBIDA',\n  label: 'SUBIDA',\n  color: '#27AE60'\n},\n// VERDE\n{\n  value: 'BAJADA',\n  label: 'BAJADA',\n  color: '#EB5757'\n},\n// ROJO\n{\n  value: 'STAND BY',\n  label: 'STAND BY',\n  color: '#F2C94C'\n} // AMARILLO\n];\n\n// Datos iniciales para el formulario\nconst initialFormData = {\n  cliente: '',\n  servicio: null,\n  unidades: [{\n    movil: '',\n    choferes: ['', '', '']\n  }],\n  origen: '',\n  destino: '',\n  horario: '',\n  observaciones: ''\n};\n\n// Función para formatear la fecha en YYYY-MM-DD\nconst formatDateForInput = date => {\n  const offset = date.getTimezoneOffset();\n  const localDate = new Date(date.getTime() - offset * 60 * 1000);\n  return localDate.toISOString().split('T')[0];\n};\n\n// Arrays de días de la semana y meses en español\nconst daysOfWeek = ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'];\nconst monthsOfYear = ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'];\n\n// Componentes separados\n\nconst DayCard = ({\n  dayData,\n  dateKey,\n  servicesForDay,\n  addService,\n  setExpandedService,\n  filters,\n  services,\n  isAuthenticated\n}) => {\n  const {\n    day,\n    month,\n    year\n  } = dayData;\n\n  // Crear un objeto Date\n  const date = new Date(year, month - 1, day);\n\n  // Obtener el día de la semana y formatear la fecha\n  const dayOfWeek = daysOfWeek[date.getDay()];\n  const formattedDate = `${dayOfWeek} ${day}/${month}`;\n\n  // Filtrar los servicios según los filtros seleccionados\n  const filteredServices = servicesForDay === null || servicesForDay === void 0 ? void 0 : servicesForDay.filter(service => {\n    // Filtrar por chofer\n    const matchesChofer = filters.chofer ? service.unidades.some(unidad => unidad.choferes.includes(filters.chofer)) : true;\n    // Filtrar por móvil\n    const matchesMovil = filters.movil ? service.unidades.some(unidad => unidad.movil === filters.movil) : true;\n    return matchesChofer && matchesMovil;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-service-btn\",\n        onClick: () => addService(dateKey),\n        children: \"+ Servicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"service-list\",\n        children: filteredServices && filteredServices.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"service-list-items\",\n          children: filteredServices.map((service, index) => /*#__PURE__*/_jsxDEV(ServiceCard, {\n            service: service,\n            index: index,\n            dateKey: dateKey,\n            setExpandedService: setExpandedService,\n            services: services\n          }, service.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n_c = DayCard;\nconst ServiceCard = ({\n  service,\n  setExpandedService\n}) => {\n  var _service$unidades;\n  // Obtener el color asociado al tipo de servicio\n  const serviceOption = servicioOptions.find(option => option.value === service.servicio);\n  const serviceColor = serviceOption ? serviceOption.color : '#FFFFFF';\n\n  // Manejar el clic en la tarjeta\n  const handleCardClick = () => {\n    setExpandedService(service);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"service-card clickable\",\n    style: {\n      backgroundColor: serviceColor\n    },\n    onClick: handleCardClick,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [service.cliente, \", \", serviceOption === null || serviceOption === void 0 ? void 0 : serviceOption.label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), (_service$unidades = service.unidades) === null || _service$unidades === void 0 ? void 0 : _service$unidades.map((unidad, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"movil-highlight\",\n        children: unidad.movil\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), \", \", unidad.choferes.filter(Boolean).join(', ')]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [service.origen, \" - \", service.destino]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: service.horario\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ServiceCard;\nconst ServiceForm = ({\n  editingService,\n  formData,\n  setFormData,\n  addUnidad,\n  handleInputChange,\n  handleArrayInputChange,\n  handleChoferInputChange,\n  saveService,\n  updateService,\n  setShowForm,\n  setEditingService,\n  services,\n  showForm\n}) => {\n  // Obtener la fecha actual del formulario\n  const [year, month, day] = showForm.split('-');\n\n  // Función para obtener el estado de disponibilidad\n  const getAvailability = (type, name) => {\n    let isOccupied = false;\n    const dateKey = `${year}-${month}-${day}`;\n    const servicesForDay = services[dateKey] || [];\n    servicesForDay.forEach(service => {\n      if (editingService && service.id === editingService.id) return; // Ignorar el servicio que se está editando\n      service.unidades.forEach(unidad => {\n        if (type === 'chofer') {\n          unidad.choferes.forEach(chofer => {\n            if (chofer === name) {\n              isOccupied = true;\n            }\n          });\n        } else if (type === 'movil') {\n          if (unidad.movil === name) {\n            isOccupied = true;\n          }\n        }\n      });\n    });\n    return isOccupied;\n  };\n\n  // Estilos para react-select\n  const customStyles = {\n    option: (provided, {\n      data\n    }) => ({\n      ...provided,\n      color: data.isOccupied ? 'red' : 'green'\n    }),\n    singleValue: (provided, {\n      data\n    }) => ({\n      ...provided,\n      color: data.isOccupied ? 'red' : 'green'\n    })\n  };\n\n  // Función para eliminar una unidad\n  const removeUnidad = index => {\n    setFormData(prevData => {\n      const updatedUnidades = [...prevData.unidades];\n      updatedUnidades.splice(index, 1);\n      return {\n        ...prevData,\n        unidades: updatedUnidades\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: editingService ? \"Editar servicio\" : \"Añadir servicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Cliente:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"cliente\",\n      value: formData.cliente,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Servicio:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: servicioOptions,\n      onChange: selectedOption => setFormData({\n        ...formData,\n        servicio: selectedOption.value\n      }),\n      value: servicioOptions.find(option => option.value === formData.servicio),\n      placeholder: \"Seleccione un servicio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), formData.unidades.map((unidad, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unidad-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Movil:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: movilesOptions.map(movil => ({\n          value: movil.value,\n          label: movil.label,\n          isOccupied: getAvailability('movil', movil.value)\n        })),\n        styles: customStyles,\n        onChange: selectedOption => handleArrayInputChange(selectedOption.value, index, 'movil', 'unidades'),\n        value: movilesOptions.find(movil => movil.value === unidad.movil),\n        placeholder: \"Seleccione un m\\xF3vil...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this), unidad.choferes.map((choferValue, choferIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: `Chofer ${choferIndex + 1}:`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: choferesOptions.map(choferOption => ({\n            value: choferOption.value,\n            label: choferOption.label,\n            isOccupied: getAvailability('chofer', choferOption.value)\n          })),\n          styles: customStyles,\n          onChange: selectedOption => handleChoferInputChange(selectedOption.value, index, choferIndex),\n          value: choferesOptions.find(c => c.value === choferValue),\n          placeholder: \"Seleccione un chofer...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 29\n        }, this)]\n      }, choferIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeUnidad(index),\n        className: \"button delete-btn\",\n        children: \"Eliminar Unidad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addUnidad,\n      className: \"button add-more-btn\",\n      children: \"+ A\\xF1adir otra unidad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Origen:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"origen\",\n      value: formData.origen,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Destino:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"destino\",\n      value: formData.destino,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Horario:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      name: \"horario\",\n      value: formData.horario,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Observaciones:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"observaciones\",\n      value: formData.observaciones,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this), editingService ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateService,\n      className: \"button save-btn\",\n      children: \"Actualizar Servicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveService,\n      className: \"button save-btn\",\n      children: \"Guardar Servicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShowForm(null);\n        setEditingService(null);\n        setFormData(initialFormData);\n      },\n      className: \"button cancel-btn\",\n      children: \"Cerrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 9\n  }, this);\n};\n_c3 = ServiceForm;\nconst ServiceModal = ({\n  expandedService,\n  setExpandedService,\n  editService,\n  isAuthenticated,\n  deleteService\n}) => {\n  var _expandedService$unid;\n  // Obtener el color asociado al tipo de servicio\n  const serviceOption = servicioOptions.find(option => option.value === expandedService.servicio);\n  const serviceColor = serviceOption ? serviceOption.color : '#FFFFFF';\n\n  // Definir dateKey aquí\n  const dateKey = `${expandedService.year}-${expandedService.month}-${expandedService.day}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-backdrop\",\n    onClick: () => setExpandedService(null),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation(),\n      style: {\n        backgroundColor: serviceColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Detalles del Servicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Cliente:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 20\n        }, this), \" \", expandedService.cliente]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Servicio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 20\n        }, this), \" \", serviceOption === null || serviceOption === void 0 ? void 0 : serviceOption.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this), (_expandedService$unid = expandedService.unidades) === null || _expandedService$unid === void 0 ? void 0 : _expandedService$unid.map((unidad, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"M\\xF3vil:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 28\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"movil-highlight-modal\",\n            children: unidad.movil\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 25\n        }, this), unidad.choferes.map((chofer, choferIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Chofer \", choferIndex + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 50\n          }, this), \" \", chofer]\n        }, choferIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 29\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Origen:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 20\n        }, this), \" \", expandedService.origen, \" - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Destino:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 72\n        }, this), \" \", expandedService.destino]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Horario:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 20\n        }, this), \" \", expandedService.horario]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Observaciones:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 20\n        }, this), \" \", expandedService.observaciones]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button edit-btn\",\n          onClick: () => {\n            editService(expandedService);\n            setExpandedService(null);\n          },\n          children: \"Editar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button delete-btn\",\n          onClick: () => deleteService(expandedService.id, dateKey),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button close-btn\",\n        onClick: () => setExpandedService(null),\n        children: \"Cerrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 9\n  }, this);\n};\n_c4 = ServiceModal;\nconst Semaforo = ({\n  selectedDate,\n  choferesList,\n  movilesList,\n  services\n}) => {\n  // Formatear la fecha seleccionada\n  const year = selectedDate.getFullYear();\n  const month = selectedDate.getMonth() + 1; // Los meses en JavaScript van de 0 a 11\n  const day = selectedDate.getDate();\n  const dateKey = `${year}-${month}-${day}`;\n  const servicesForDay = services[dateKey] || [];\n\n  // Obtener listas de choferes y móviles ocupados\n  const choferesOcupados = new Set();\n  const movilesOcupados = new Set();\n  servicesForDay.forEach(service => {\n    service.unidades.forEach(unidad => {\n      if (unidad.movil) {\n        movilesOcupados.add(unidad.movil);\n      }\n      unidad.choferes.forEach(chofer => {\n        if (chofer) {\n          choferesOcupados.add(chofer);\n        }\n      });\n    });\n  });\n\n  // Opciones para los selectores\n  const choferesSemaforoOptions = choferesList.map(chofer => ({\n    value: chofer,\n    label: chofer,\n    isOccupied: choferesOcupados.has(chofer)\n  }));\n  const movilesSemaforoOptions = movilesList.map(movil => ({\n    value: movil,\n    label: movil,\n    isOccupied: movilesOcupados.has(movil)\n  }));\n\n  // Estilos para react-select\n  const customStyles = {\n    option: (provided, {\n      data\n    }) => ({\n      ...provided,\n      color: data.isOccupied ? 'red' : 'green'\n    }),\n    multiValueLabel: (provided, {\n      data\n    }) => ({\n      ...provided,\n      color: data.isOccupied ? 'red' : 'green'\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"semaforo-dropdowns\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Disponibilidad para \", day, \"/\", month, \"/\", year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"semaforo-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Choferes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: choferesSemaforoOptions,\n        styles: customStyles,\n        isMulti: true,\n        isClearable: true,\n        placeholder: \"Seleccione choferes...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"semaforo-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"M\\xF3viles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        options: movilesSemaforoOptions,\n        styles: customStyles,\n        isMulti: true,\n        isClearable: true,\n        placeholder: \"Seleccione m\\xF3viles...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 475,\n    columnNumber: 9\n  }, this);\n};\n_c5 = Semaforo;\nconst LoginForm = ({\n  handleLogin,\n  setShowLoginForm\n}) => {\n  _s();\n  const [password, setPassword] = useState('');\n  const onSubmit = e => {\n    e.preventDefault();\n    handleLogin(password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-backdrop\",\n    onClick: () => setShowLoginForm(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content login-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contrase\\xF1a:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button login-submit-btn\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button close-btn\",\n        onClick: () => setShowLoginForm(false),\n        children: \"Cerrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 510,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"Y/4oil5yuJ8nKfSTE84bnqMxt48=\");\n_c6 = LoginForm;\nfunction App() {\n  _s2();\n  const currentYear = new Date().getFullYear();\n  const currentMonth = new Date().getMonth() + 1;\n  const currentDay = new Date().getDate();\n  const [viewedMonthIndex, setViewedMonthIndex] = useState(currentMonth - 1);\n  const [services, setServices] = useState({});\n  const [showForm, setShowForm] = useState(null);\n  const [editingService, setEditingService] = useState(null);\n  const [expandedService, setExpandedService] = useState(null);\n  const [formData, setFormData] = useState(initialFormData);\n  const [filters, setFilters] = useState({\n    chofer: null,\n    movil: null\n  });\n  const [selectedSemaforoDate, setSelectedSemaforoDate] = useState(new Date());\n  const [reportFilterType, setReportFilterType] = useState('cliente');\n  const [reportFilterValue, setReportFilterValue] = useState(null);\n  const [reportStartDate, setReportStartDate] = useState(null);\n  const [reportEndDate, setReportEndDate] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showLoginForm, setShowLoginForm] = useState(false);\n  const daysInYear = useMemo(() => {\n    let days = [];\n    for (let month = 1; month <= 12; month++) {\n      const daysInMonth = new Date(currentYear, month, 0).getDate();\n      for (let day = 1; day <= daysInMonth; day++) {\n        days.push({\n          day,\n          month,\n          year: currentYear\n        });\n      }\n    }\n    return days;\n  }, [currentYear]);\n  const scrollContainerRef = useRef(null);\n  const fetchServices = async () => {\n    const {\n      data: servicesData,\n      error\n    } = await supabase.from('services').select('*');\n    if (error) {\n      console.error('Error al obtener los servicios:', error);\n    } else {\n      const formattedServices = servicesData.reduce((acc, service) => {\n        const dateKey = `${service.year}-${service.month}-${service.day}`;\n        const updatedService = {\n          ...service\n        };\n        if (!acc[dateKey]) {\n          acc[dateKey] = [];\n        }\n        acc[dateKey].push(updatedService);\n        return acc;\n      }, {});\n      setServices(formattedServices);\n    }\n  };\n  useEffect(() => {\n    fetchServices();\n    const subscription = supabase.channel('public:services').on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'services'\n    }, payload => {\n      console.log('Cambio en tiempo real:', payload);\n      const oldServiceData = payload.old || {};\n      const newServiceData = payload.new || {};\n      const oldDateKey = `${oldServiceData.year}-${oldServiceData.month}-${oldServiceData.day}`;\n      const newDateKey = `${newServiceData.year}-${newServiceData.month}-${newServiceData.day}`;\n      setServices(prevServices => {\n        const updatedServices = {\n          ...prevServices\n        };\n        switch (payload.eventType) {\n          case 'INSERT':\n            if (!updatedServices[newDateKey]) {\n              updatedServices[newDateKey] = [];\n            }\n            updatedServices[newDateKey].push(newServiceData);\n            break;\n          case 'UPDATE':\n            // Eliminar de todos los dateKeys posibles\n            Object.keys(updatedServices).forEach(key => {\n              updatedServices[key] = updatedServices[key].filter(service => service.id !== newServiceData.id);\n              if (updatedServices[key].length === 0) {\n                delete updatedServices[key];\n              }\n            });\n            // Agregar al nuevo dateKey\n            if (!updatedServices[newDateKey]) {\n              updatedServices[newDateKey] = [];\n            }\n            updatedServices[newDateKey].push(newServiceData);\n            break;\n          case 'DELETE':\n            if (updatedServices[oldDateKey]) {\n              updatedServices[oldDateKey] = updatedServices[oldDateKey].filter(service => service.id !== oldServiceData.id);\n              if (updatedServices[oldDateKey].length === 0) {\n                delete updatedServices[oldDateKey];\n              }\n            }\n            break;\n          default:\n            break;\n        }\n        return updatedServices;\n      });\n    }).subscribe();\n    return () => {\n      supabase.removeChannel(subscription);\n    };\n  }, []);\n  useEffect(() => {\n    // Desplazar al día actual solo al cargar la aplicación\n    const scrollContainer = scrollContainerRef.current;\n    if (scrollContainer && !showForm && !editingService && !expandedService) {\n      const currentDayIndex = daysInYear.findIndex(day => day.month === currentMonth && day.day === currentDay);\n      if (currentDayIndex !== -1) {\n        const dayCardWidth = scrollContainer.scrollWidth / daysInYear.length;\n        scrollContainer.scrollTo({\n          left: currentDayIndex * dayCardWidth,\n          behavior: 'smooth'\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [daysInYear, currentMonth, currentDay, showForm, editingService, expandedService]);\n\n  // Estados para el arrastre\n  const [isDragging, setIsDragging] = useState(false);\n  const [startXDrag, setStartXDrag] = useState(0);\n  const [scrollLeftDrag, setScrollLeftDrag] = useState(0);\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n    let isDown = false;\n    let startX;\n    let scrollLeftPos;\n    const mouseDownHandler = e => {\n      isDown = true;\n      scrollContainer.classList.add('active');\n      startX = e.pageX - scrollContainer.offsetLeft;\n      scrollLeftPos = scrollContainer.scrollLeft;\n    };\n    const mouseLeaveHandler = () => {\n      isDown = false;\n      scrollContainer.classList.remove('active');\n    };\n    const mouseUpHandler = () => {\n      isDown = false;\n      scrollContainer.classList.remove('active');\n    };\n    const mouseMoveHandler = e => {\n      if (!isDown) return;\n      e.preventDefault();\n      const x = e.pageX - scrollContainer.offsetLeft;\n      const walk = (x - startX) * 1; // Ajusta el multiplicador según la velocidad que desees\n      scrollContainer.scrollLeft = scrollLeftPos - walk;\n    };\n\n    // Manejadores para dispositivos táctiles\n    const touchStartHandler = e => {\n      isDown = true;\n      scrollContainer.classList.add('active');\n      startX = e.touches[0].pageX - scrollContainer.offsetLeft;\n      scrollLeftPos = scrollContainer.scrollLeft;\n    };\n    const touchEndHandler = () => {\n      isDown = false;\n      scrollContainer.classList.remove('active');\n    };\n    const touchMoveHandler = e => {\n      if (!isDown) return;\n      const x = e.touches[0].pageX - scrollContainer.offsetLeft;\n      const walk = (x - startX) * 1; // Ajusta el multiplicador según la velocidad que desees\n      scrollContainer.scrollLeft = scrollLeftPos - walk;\n    };\n    scrollContainer.addEventListener('mousedown', mouseDownHandler);\n    scrollContainer.addEventListener('mouseleave', mouseLeaveHandler);\n    scrollContainer.addEventListener('mouseup', mouseUpHandler);\n    scrollContainer.addEventListener('mousemove', mouseMoveHandler);\n    scrollContainer.addEventListener('touchstart', touchStartHandler);\n    scrollContainer.addEventListener('touchend', touchEndHandler);\n    scrollContainer.addEventListener('touchmove', touchMoveHandler);\n    return () => {\n      scrollContainer.removeEventListener('mousedown', mouseDownHandler);\n      scrollContainer.removeEventListener('mouseleave', mouseLeaveHandler);\n      scrollContainer.removeEventListener('mouseup', mouseUpHandler);\n      scrollContainer.removeEventListener('mousemove', mouseMoveHandler);\n      scrollContainer.removeEventListener('touchstart', touchStartHandler);\n      scrollContainer.removeEventListener('touchend', touchEndHandler);\n      scrollContainer.removeEventListener('touchmove', touchMoveHandler);\n    };\n  }, []);\n  const saveServiceToDatabase = async serviceData => {\n    const dataToSave = {\n      ...serviceData\n    };\n    const {\n      error\n    } = await supabase.from('services').insert([dataToSave]);\n    if (error) {\n      console.error('Error al guardar el servicio:', error);\n      alert(`Error al guardar el servicio: ${error.message}`);\n    } else {\n      alert('Servicio guardado exitosamente.');\n    }\n  };\n  const updateServiceInDatabase = async serviceData => {\n    const {\n      id,\n      ...rest\n    } = serviceData;\n    const {\n      data,\n      error\n    } = await supabase.from('services').update(rest).eq('id', id);\n    if (error) {\n      console.error('Error al actualizar el servicio:', error);\n      alert(`Error al actualizar el servicio: ${error.message}`);\n    } else {\n      alert('Servicio actualizado exitosamente.');\n      // Actualizar el estado local\n      setServices(prevServices => {\n        const updatedServices = {\n          ...prevServices\n        };\n        const dateKey = `${rest.year}-${rest.month}-${rest.day}`;\n\n        // Remover el servicio de su ubicación anterior si cambió de fecha\n        Object.keys(updatedServices).forEach(key => {\n          updatedServices[key] = updatedServices[key].filter(service => service.id !== id);\n          if (updatedServices[key].length === 0) {\n            delete updatedServices[key];\n          }\n        });\n\n        // Añadir el servicio actualizado a la nueva fecha\n        if (!updatedServices[dateKey]) {\n          updatedServices[dateKey] = [];\n        }\n        updatedServices[dateKey].push({\n          ...rest,\n          id\n        });\n        return updatedServices;\n      });\n    }\n  };\n  const deleteService = async (serviceId, dateKey) => {\n    if (!window.confirm('¿Estás seguro de que deseas eliminar este servicio?')) {\n      return;\n    }\n    const {\n      error\n    } = await supabase.from('services').delete().eq('id', serviceId);\n    if (error) {\n      console.error('Error al eliminar el servicio:', error);\n      alert(`Error al eliminar el servicio: ${error.message}`);\n    } else {\n      alert('Servicio eliminado exitosamente.');\n      // Actualizar el estado local\n      setServices(prevServices => {\n        const updatedServices = {\n          ...prevServices\n        };\n        if (updatedServices[dateKey]) {\n          updatedServices[dateKey] = updatedServices[dateKey].filter(service => service.id !== serviceId);\n          if (updatedServices[dateKey].length === 0) {\n            delete updatedServices[dateKey];\n          }\n        }\n        return updatedServices;\n      });\n      setExpandedService(null); // Cerrar el modal después de eliminar\n    }\n  };\n  const addUnidad = () => {\n    setFormData(prevData => ({\n      ...prevData,\n      unidades: [...prevData.unidades, {\n        movil: '',\n        choferes: ['', '', '']\n      }]\n    }));\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleArrayInputChange = (value, index, field, type) => {\n    const updatedData = formData[type].map((item, i) => i === index ? {\n      ...item,\n      [field]: value\n    } : item);\n    setFormData(prevData => ({\n      ...prevData,\n      [type]: updatedData\n    }));\n  };\n  const handleChoferInputChange = (value, unidadIndex, choferIndex) => {\n    const updatedChoferes = [...formData.unidades[unidadIndex].choferes];\n    updatedChoferes[choferIndex] = value;\n    const updatedUnidades = [...formData.unidades];\n    updatedUnidades[unidadIndex].choferes = updatedChoferes;\n    setFormData(prevData => ({\n      ...prevData,\n      unidades: updatedUnidades\n    }));\n  };\n  const saveService = () => {\n    if (!showForm) return; // Prevent if no dateKey\n\n    const [year, month, day] = showForm.split('-');\n    const serviceData = {\n      ...formData,\n      year: parseInt(year),\n      month: parseInt(month),\n      day: parseInt(day)\n    };\n    saveServiceToDatabase(serviceData);\n    setShowForm(null);\n    setFormData(initialFormData);\n  };\n  const updateService = () => {\n    const serviceData = {\n      ...formData,\n      id: editingService.id\n    };\n    updateServiceInDatabase(serviceData);\n    setShowForm(null);\n    setEditingService(null);\n    setFormData(initialFormData);\n  };\n  const editService = service => {\n    setFormData({\n      cliente: service.cliente,\n      servicio: service.servicio,\n      unidades: service.unidades,\n      origen: service.origen,\n      destino: service.destino,\n      horario: service.horario,\n      observaciones: service.observaciones,\n      year: service.year,\n      month: service.month,\n      day: service.day\n    });\n    setEditingService(service);\n    setShowForm(`${service.year}-${service.month}-${service.day}`);\n  };\n  const jumpToMonth = event => {\n    const selectedMonth = parseInt(event.target.value, 10) + 1; // +1 porque los meses en JavaScript son 0-based\n    setViewedMonthIndex(selectedMonth - 1);\n    const firstDayOfMonthIndex = daysInYear.findIndex(day => day.month === selectedMonth && day.day === 1);\n    const scrollContainer = scrollContainerRef.current;\n    if (scrollContainer) {\n      const dayCardWidth = scrollContainer.clientWidth / getDaysPerView();\n      scrollContainer.scrollTo({\n        left: firstDayOfMonthIndex * dayCardWidth,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const getDaysPerView = () => {\n    const width = window.innerWidth;\n    if (width >= 1200) return 7; // Pantallas grandes\n    if (width >= 768) return 5; // Pantallas medianas\n    return 2; // Pantallas pequeñas\n  };\n\n  // Obtener el nombre del mes actual\n  const displayedMonthName = monthsOfYear[viewedMonthIndex];\n  const addService = dateKey => {\n    setFormData(initialFormData);\n    setEditingService(null);\n    setShowForm(dateKey);\n  };\n\n  // Funciones para los botones de navegación\n  const scrollLeftFunc = () => {\n    const scrollContainer = scrollContainerRef.current;\n    if (scrollContainer) {\n      const dayCardWidth = scrollContainer.clientWidth / getDaysPerView();\n      scrollContainer.scrollBy({\n        left: -dayCardWidth,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const scrollRightFunc = () => {\n    const scrollContainer = scrollContainerRef.current;\n    if (scrollContainer) {\n      const dayCardWidth = scrollContainer.clientWidth / getDaysPerView();\n      scrollContainer.scrollBy({\n        left: dayCardWidth,\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  // Manejo de filtros\n  const handleFilterChange = (selectedOption, filterType) => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [filterType]: selectedOption ? selectedOption.value : null\n    }));\n  };\n\n  // Manejo del cambio de fecha en el semáforo\n  const handleSemaforoDateChange = e => {\n    const selectedDate = new Date(e.target.value + 'T00:00:00');\n    setSelectedSemaforoDate(selectedDate);\n  };\n\n  // Función para generar informes en PDF\n  const generatePDFReport = () => {\n    if (!reportStartDate || !reportEndDate) {\n      alert('Por favor, seleccione una fecha de inicio y una fecha de fin para el informe.');\n      return;\n    }\n    let filteredServices = [];\n\n    // Filtrar servicios dentro del rango de fechas seleccionado\n    for (let dateKey in services) {\n      const [year, month, day] = dateKey.split('-').map(Number);\n      const serviceDate = new Date(year, month - 1, day);\n      if (serviceDate >= reportStartDate && serviceDate <= reportEndDate) {\n        filteredServices = filteredServices.concat(services[dateKey]);\n      }\n    }\n\n    // Aplicar filtro adicional (cliente, chofer o móvil)\n    if (reportFilterValue) {\n      filteredServices = filteredServices.filter(service => {\n        if (reportFilterType === 'cliente') {\n          return service.cliente === reportFilterValue;\n        } else if (reportFilterType === 'chofer') {\n          return service.unidades.some(unidad => unidad.choferes.includes(reportFilterValue));\n        } else if (reportFilterType === 'movil') {\n          return service.unidades.some(unidad => unidad.movil === reportFilterValue);\n        }\n        return true;\n      });\n    }\n    if (filteredServices.length === 0) {\n      alert('No se encontraron servicios en el rango de fechas seleccionado.');\n      return;\n    }\n\n    // Generar el PDF\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text(`Informe desde ${reportStartDate.toLocaleDateString()} hasta ${reportEndDate.toLocaleDateString()}`, 14, 22);\n    const tableColumn = [\"Fecha\", \"Cliente\", \"Servicio\", \"Unidades\", \"Origen\", \"Destino\", \"Horario\", \"Observaciones\"];\n    const tableRows = [];\n    filteredServices.forEach(service => {\n      const serviceDate = `${service.day}/${service.month}/${service.year}`;\n      const unidades = service.unidades.map(unidad => {\n        const movil = `Móvil: ${unidad.movil}`;\n        const choferes = unidad.choferes.filter(Boolean).map(chofer => `Chofer: ${chofer}`).join(\", \");\n        return `${movil}, ${choferes}`;\n      }).join(\" | \");\n      const rowData = [serviceDate, service.cliente, service.servicio, unidades, service.origen, service.destino, service.horario, service.observaciones];\n      tableRows.push(rowData);\n    });\n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 30,\n      styles: {\n        fontSize: 10\n      },\n      columnStyles: {\n        3: {\n          cellWidth: 'auto'\n        } // \"Unidades\" column\n      }\n    });\n    doc.save(`informe_${reportStartDate.toLocaleDateString()}_al_${reportEndDate.toLocaleDateString()}.pdf`);\n  };\n  const handleLogin = password => {\n    const correctPassword = 'admin123'; // Reemplaza con la contraseña deseada\n    if (password === correctPassword) {\n      setIsAuthenticated(true);\n      setShowLoginForm(false);\n    } else {\n      alert('Contraseña incorrecta');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Planificaci\\xF3n de Servicios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 17\n      }, this), !isAuthenticated && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button login-btn\",\n        onClick: () => setShowLoginForm(true),\n        children: \"Iniciar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 21\n      }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button logout-btn\",\n        onClick: () => setIsAuthenticated(false),\n        children: \"Cerrar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1071,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 13\n    }, this), showLoginForm && /*#__PURE__*/_jsxDEV(LoginForm, {\n      handleLogin: handleLogin,\n      setShowLoginForm: setShowLoginForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 17\n    }, this), !showForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"month-viewing\",\n        children: [\"Visualizando: \", displayedMonthName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"monthSelector\",\n            children: \"Ir al mes: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"monthSelector\",\n            onChange: jumpToMonth,\n            value: viewedMonthIndex,\n            children: monthsOfYear.map((monthName, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: i,\n              children: monthName\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1090,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Filtrar por Chofer:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: choferesOptions,\n              onChange: option => handleFilterChange(option, 'chofer'),\n              isClearable: true,\n              placeholder: \"Seleccione un chofer...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Filtrar por M\\xF3vil:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: movilesOptions,\n              onChange: option => handleFilterChange(option, 'movil'),\n              isClearable: true,\n              placeholder: \"Seleccione un m\\xF3vil...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 25\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"semaforo-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"semaforo-date-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Seleccionar fecha para disponibilidad:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1128,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: formatDateForInput(selectedSemaforoDate),\n                onChange: handleSemaforoDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1129,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1127,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Semaforo, {\n              selectedDate: selectedSemaforoDate,\n              choferesList: choferesList,\n              movilesList: movilesList,\n              services: services\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Generar informe:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"report-date-selectors\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Fecha de inicio:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1147,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: reportStartDate ? formatDateForInput(reportStartDate) : '',\n                onChange: e => setReportStartDate(new Date(e.target.value + 'T00:00:00'))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Fecha de fin:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1153,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: reportEndDate ? formatDateForInput(reportEndDate) : '',\n                onChange: e => setReportEndDate(new Date(e.target.value + 'T23:59:59'))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1154,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: reportFilterType,\n              onChange: e => {\n                setReportFilterType(e.target.value);\n                setReportFilterValue(null);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cliente\",\n                children: \"Por Cliente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1162,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"chofer\",\n                children: \"Por Chofer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1163,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"movil\",\n                children: \"Por M\\xF3vil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1164,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1161,\n              columnNumber: 37\n            }, this), reportFilterType === 'cliente' && /*#__PURE__*/_jsxDEV(Select, {\n              options: [...new Set(Object.values(services).flat().map(s => s.cliente))].map(cliente => ({\n                value: cliente,\n                label: cliente\n              })),\n              onChange: option => setReportFilterValue(option ? option.value : null),\n              isClearable: true,\n              placeholder: \"Seleccione un cliente...\",\n              className: \"report-filter-select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 41\n            }, this), reportFilterType === 'chofer' && /*#__PURE__*/_jsxDEV(Select, {\n              options: choferesOptions,\n              onChange: option => setReportFilterValue(option ? option.value : null),\n              isClearable: true,\n              placeholder: \"Seleccione un chofer...\",\n              className: \"report-filter-select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1178,\n              columnNumber: 41\n            }, this), reportFilterType === 'movil' && /*#__PURE__*/_jsxDEV(Select, {\n              options: movilesOptions,\n              onChange: option => setReportFilterValue(option ? option.value : null),\n              isClearable: true,\n              placeholder: \"Seleccione un m\\xF3vil...\",\n              className: \"report-filter-select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1188,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: generatePDFReport,\n              className: \"button report-btn\",\n              children: \"Generar Informe PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1088,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nav-button left-button\",\n          onClick: scrollLeftFunc,\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"days-scroll-container\",\n          className: \"days-scroll-container\",\n          ref: scrollContainerRef,\n          children: daysInYear.map(dayData => {\n            const dateKey = `${dayData.year}-${dayData.month}-${dayData.day}`;\n            const servicesForDay = services[dateKey];\n            return /*#__PURE__*/_jsxDEV(DayCard, {\n              dayData: dayData,\n              dateKey: dateKey,\n              servicesForDay: servicesForDay,\n              addService: addService,\n              setExpandedService: setExpandedService,\n              filters: filters,\n              services: services,\n              isAuthenticated: isAuthenticated\n            }, dateKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1214,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nav-button right-button\",\n          onClick: scrollRightFunc,\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1204,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), showForm && /*#__PURE__*/_jsxDEV(ServiceForm, {\n      editingService: editingService,\n      formData: formData,\n      setFormData: setFormData,\n      addUnidad: addUnidad,\n      handleInputChange: handleInputChange,\n      handleArrayInputChange: handleArrayInputChange,\n      handleChoferInputChange: handleChoferInputChange,\n      saveService: saveService,\n      updateService: updateService,\n      setShowForm: setShowForm,\n      setEditingService: setEditingService,\n      services: services,\n      showForm: showForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1237,\n      columnNumber: 17\n    }, this), expandedService && /*#__PURE__*/_jsxDEV(ServiceModal, {\n      expandedService: expandedService,\n      setExpandedService: setExpandedService,\n      editService: editService,\n      isAuthenticated: isAuthenticated,\n      deleteService: deleteService\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1062,\n    columnNumber: 9\n  }, this);\n}\n_s2(App, \"6/2gGNnGhQ7qZJ7FlTSRbz6kRhQ=\");\n_c7 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DayCard\");\n$RefreshReg$(_c2, \"ServiceCard\");\n$RefreshReg$(_c3, \"ServiceForm\");\n$RefreshReg$(_c4, \"ServiceModal\");\n$RefreshReg$(_c5, \"Semaforo\");\n$RefreshReg$(_c6, \"LoginForm\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useMemo","supabase","Select","jsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","choferesList","movilesList","choferesOptions","map","chofer","value","label","movilesOptions","movil","servicioOptions","color","initialFormData","cliente","servicio","unidades","choferes","origen","destino","horario","observaciones","formatDateForInput","date","offset","getTimezoneOffset","localDate","Date","getTime","toISOString","split","daysOfWeek","monthsOfYear","DayCard","dayData","dateKey","servicesForDay","addService","setExpandedService","filters","services","isAuthenticated","day","month","year","dayOfWeek","getDay","formattedDate","filteredServices","filter","service","matchesChofer","some","unidad","includes","matchesMovil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","index","ServiceCard","id","_c","_service$unidades","serviceOption","find","option","serviceColor","handleCardClick","style","backgroundColor","idx","Boolean","join","_c2","ServiceForm","editingService","formData","setFormData","addUnidad","handleInputChange","handleArrayInputChange","handleChoferInputChange","saveService","updateService","setShowForm","setEditingService","showForm","getAvailability","type","name","isOccupied","forEach","customStyles","provided","data","singleValue","removeUnidad","prevData","updatedUnidades","splice","onChange","options","selectedOption","placeholder","styles","choferValue","choferIndex","choferOption","c","_c3","ServiceModal","expandedService","editService","deleteService","_expandedService$unid","e","stopPropagation","_c4","Semaforo","selectedDate","getFullYear","getMonth","getDate","choferesOcupados","Set","movilesOcupados","add","choferesSemaforoOptions","has","movilesSemaforoOptions","multiValueLabel","isMulti","isClearable","_c5","LoginForm","handleLogin","setShowLoginForm","_s","password","setPassword","onSubmit","preventDefault","target","_c6","App","_s2","currentYear","currentMonth","currentDay","viewedMonthIndex","setViewedMonthIndex","setServices","setFilters","selectedSemaforoDate","setSelectedSemaforoDate","reportFilterType","setReportFilterType","reportFilterValue","setReportFilterValue","reportStartDate","setReportStartDate","reportEndDate","setReportEndDate","setIsAuthenticated","showLoginForm","daysInYear","days","daysInMonth","push","scrollContainerRef","fetchServices","servicesData","error","from","select","console","formattedServices","reduce","acc","updatedService","subscription","channel","on","event","schema","table","payload","log","oldServiceData","old","newServiceData","new","oldDateKey","newDateKey","prevServices","updatedServices","eventType","Object","keys","key","subscribe","removeChannel","scrollContainer","current","currentDayIndex","findIndex","dayCardWidth","scrollWidth","scrollTo","left","behavior","isDragging","setIsDragging","startXDrag","setStartXDrag","scrollLeftDrag","setScrollLeftDrag","isDown","startX","scrollLeftPos","mouseDownHandler","classList","pageX","offsetLeft","scrollLeft","mouseLeaveHandler","remove","mouseUpHandler","mouseMoveHandler","x","walk","touchStartHandler","touches","touchEndHandler","touchMoveHandler","addEventListener","removeEventListener","saveServiceToDatabase","serviceData","dataToSave","insert","alert","message","updateServiceInDatabase","rest","update","eq","serviceId","window","confirm","delete","field","updatedData","item","i","unidadIndex","updatedChoferes","parseInt","jumpToMonth","selectedMonth","firstDayOfMonthIndex","clientWidth","getDaysPerView","width","innerWidth","displayedMonthName","scrollLeftFunc","scrollBy","scrollRightFunc","handleFilterChange","filterType","prevFilters","handleSemaforoDateChange","generatePDFReport","Number","serviceDate","concat","doc","setFontSize","text","toLocaleDateString","tableColumn","tableRows","rowData","autoTable","head","body","startY","fontSize","columnStyles","cellWidth","save","correctPassword","htmlFor","monthName","values","flat","s","ref","_c7","$RefreshReg$"],"sources":["C:/Users/DevOps/Documents/NB/PlanificadorNB/src/App.js"],"sourcesContent":["// App.js\r\n\r\nimport React, { useState, useRef, useEffect, useMemo } from \"react\";\r\nimport { supabase } from './supabaseClient';\r\nimport \"./App.css\";\r\nimport Select from 'react-select';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\n\r\n// Listas de choferes y móviles\r\nconst choferesList = [\r\n    \"SARAPURA\",\r\n    \"MENDOZA\",\r\n    \"ROJAS\",\r\n    \"VELEZ\",\r\n    \"MAMANI.P\",  \r\n    \"CRUZ \",\r\n    \"CALA \",\r\n    \"SALVATIERRA\", \r\n    \"GUZMAN \",\r\n    \"CORONEL \",\r\n    \"SOLIS \",\r\n    \"RIOS \",\r\n    \"SANCHEZ\", \r\n    \"FLORES \",\r\n    \"MAMANI.F\",\r\n    \"SERRUDO \",\r\n    \"YAGO\",\r\n    \"DE ZUANI\", \r\n    \"AVENDAÑO \",\r\n    \"ARJONA \",\r\n    \"RAVAZA \",\r\n    \"MARTINEZ \",\r\n    \"ARRATIA \",\r\n    \"DIAZ \",\r\n    \"COPA \",\r\n    \"SALAS \",\r\n    \"GALLARDO\", \r\n    \"APARICIO\", \r\n    \"GVH\",\r\n    \"MASTERBUS\",\r\n    \"FENIX\",\r\n    \"MAGNO\",\r\n    \"MAR ANDINO\",\r\n    \"MARCELO COPA\",\r\n    \"OTRO\"\r\n    \r\n];\r\n\r\nconst movilesList = [\r\n    \"M32\",\r\n    \"M33\",\r\n    \"M09\",\r\n    \"M18\",\r\n    \"M20\",\r\n    \"M21\",\r\n    \"M22\",\r\n    \"M24\",\r\n    \"M25\",\r\n    \"M26\",\r\n    \"M28\",\r\n    \"M30\",\r\n    \"M34\",\r\n    \"M35\",\r\n    \"M36\",\r\n    \"M37\",\r\n    \"M38\",\r\n    \"M39\",\r\n    \"M40\",\r\n    \"M41\",\r\n    \"M42\",\r\n    \"GVH\",\r\n    \"MASTERBUS\",\r\n    \"FENIX\",\r\n    \"MAGNO\",\r\n    \"MAR ANDINO\",\r\n    \"MARCELO COPA\",\r\n    \"OTRO\"\r\n    ];\r\n\r\n// Crear opciones para react-select\r\nconst choferesOptions = choferesList.map((chofer) => ({ value: chofer, label: chofer }));\r\nconst movilesOptions = movilesList.map((movil) => ({ value: movil, label: movil }));\r\n\r\n// Opciones de servicio con colores\r\nconst servicioOptions = [\r\n    { value: 'IN OUT', label: 'IN OUT', color: '#7FC6E7' },     // CELESTE\r\n    { value: 'SUBIDA', label: 'SUBIDA', color: '#27AE60' },     // VERDE\r\n    { value: 'BAJADA', label: 'BAJADA', color: '#EB5757' },     // ROJO\r\n    { value: 'STAND BY', label: 'STAND BY', color: '#F2C94C' }  // AMARILLO\r\n];\r\n\r\n// Datos iniciales para el formulario\r\nconst initialFormData = {\r\n    cliente: '',\r\n    servicio: null,\r\n    unidades: [{ movil: '', choferes: ['', '', ''] }],\r\n    origen: '',\r\n    destino: '',\r\n    horario: '',\r\n    observaciones: ''\r\n};\r\n\r\n// Función para formatear la fecha en YYYY-MM-DD\r\nconst formatDateForInput = (date) => {\r\n    const offset = date.getTimezoneOffset();\r\n    const localDate = new Date(date.getTime() - offset * 60 * 1000);\r\n    return localDate.toISOString().split('T')[0];\r\n};\r\n\r\n// Arrays de días de la semana y meses en español\r\nconst daysOfWeek = ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'];\r\nconst monthsOfYear = [\r\n    'enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio',\r\n    'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'\r\n];\r\n\r\n// Componentes separados\r\n\r\nconst DayCard = ({ dayData, dateKey, servicesForDay, addService, setExpandedService, filters, services, isAuthenticated }) => {\r\n    const { day, month, year } = dayData;\r\n\r\n    // Crear un objeto Date\r\n    const date = new Date(year, month - 1, day);\r\n\r\n    // Obtener el día de la semana y formatear la fecha\r\n    const dayOfWeek = daysOfWeek[date.getDay()];\r\n    const formattedDate = `${dayOfWeek} ${day}/${month}`;\r\n\r\n    // Filtrar los servicios según los filtros seleccionados\r\n    const filteredServices = servicesForDay?.filter(service => {\r\n        // Filtrar por chofer\r\n        const matchesChofer = filters.chofer ? service.unidades.some(unidad => unidad.choferes.includes(filters.chofer)) : true;\r\n        // Filtrar por móvil\r\n        const matchesMovil = filters.movil ? service.unidades.some(unidad => unidad.movil === filters.movil) : true;\r\n        return matchesChofer && matchesMovil;\r\n    });\r\n\r\n    return (\r\n        <div className=\"day-card\">\r\n            <div className=\"day-card-content\">\r\n                <h3>{formattedDate}</h3>\r\n\r\n                {isAuthenticated && (\r\n                    <button className=\"add-service-btn\" onClick={() => addService(dateKey)}>\r\n                        + Servicio\r\n                    </button>\r\n                )}\r\n\r\n                <div className=\"service-list\">\r\n                    {filteredServices && filteredServices.length > 0 && (\r\n                        <div className=\"service-list-items\">\r\n                            {filteredServices.map((service, index) => (\r\n                                <ServiceCard\r\n                                    key={service.id}\r\n                                    service={service}\r\n                                    index={index}\r\n                                    dateKey={dateKey}\r\n                                    setExpandedService={setExpandedService}\r\n                                    services={services}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ServiceCard = ({ service, setExpandedService }) => {\r\n    // Obtener el color asociado al tipo de servicio\r\n    const serviceOption = servicioOptions.find(option => option.value === service.servicio);\r\n    const serviceColor = serviceOption ? serviceOption.color : '#FFFFFF';\r\n\r\n    // Manejar el clic en la tarjeta\r\n    const handleCardClick = () => {\r\n        setExpandedService(service);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"service-card clickable\"\r\n            style={{ backgroundColor: serviceColor }}\r\n            onClick={handleCardClick}\r\n        >\r\n            {/* Cliente, Tipo de Servicio */}\r\n            <p>{service.cliente}, {serviceOption?.label}</p>\r\n\r\n            {/* Móvil (en negritas y destacado), Choferes */}\r\n            {service.unidades?.map((unidad, idx) => (\r\n                <p key={idx}>\r\n                    <strong className=\"movil-highlight\">{unidad.movil}</strong>, {unidad.choferes.filter(Boolean).join(', ')}\r\n                </p>\r\n            ))}\r\n\r\n            {/* Origen - Destino */}\r\n            <p>{service.origen} - {service.destino}</p>\r\n\r\n            {/* Horario */}\r\n            <p>{service.horario}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ServiceForm = ({\r\n    editingService,\r\n    formData,\r\n    setFormData,\r\n    addUnidad,\r\n    handleInputChange,\r\n    handleArrayInputChange,\r\n    handleChoferInputChange,\r\n    saveService,\r\n    updateService,\r\n    setShowForm,\r\n    setEditingService,\r\n    services,\r\n    showForm\r\n}) => {\r\n    // Obtener la fecha actual del formulario\r\n    const [year, month, day] = showForm.split('-');\r\n\r\n    // Función para obtener el estado de disponibilidad\r\n    const getAvailability = (type, name) => {\r\n        let isOccupied = false;\r\n        const dateKey = `${year}-${month}-${day}`;\r\n        const servicesForDay = services[dateKey] || [];\r\n        servicesForDay.forEach((service) => {\r\n            if (editingService && service.id === editingService.id) return; // Ignorar el servicio que se está editando\r\n            service.unidades.forEach((unidad) => {\r\n                if (type === 'chofer') {\r\n                    unidad.choferes.forEach((chofer) => {\r\n                        if (chofer === name) {\r\n                            isOccupied = true;\r\n                        }\r\n                    });\r\n                } else if (type === 'movil') {\r\n                    if (unidad.movil === name) {\r\n                        isOccupied = true;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return isOccupied;\r\n    };\r\n\r\n    // Estilos para react-select\r\n    const customStyles = {\r\n        option: (provided, { data }) => ({\r\n            ...provided,\r\n            color: data.isOccupied ? 'red' : 'green',\r\n        }),\r\n        singleValue: (provided, { data }) => ({\r\n            ...provided,\r\n            color: data.isOccupied ? 'red' : 'green',\r\n        }),\r\n    };\r\n\r\n    // Función para eliminar una unidad\r\n    const removeUnidad = (index) => {\r\n        setFormData((prevData) => {\r\n            const updatedUnidades = [...prevData.unidades];\r\n            updatedUnidades.splice(index, 1);\r\n            return {\r\n                ...prevData,\r\n                unidades: updatedUnidades\r\n            };\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h4>{editingService ? \"Editar servicio\" : \"Añadir servicio\"}</h4>\r\n            <label>Cliente:</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"cliente\"\r\n                value={formData.cliente}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Servicio:</label>\r\n            <Select\r\n                options={servicioOptions}\r\n                onChange={(selectedOption) => setFormData({ ...formData, servicio: selectedOption.value })}\r\n                value={servicioOptions.find(option => option.value === formData.servicio)}\r\n                placeholder=\"Seleccione un servicio...\"\r\n            />\r\n\r\n            {formData.unidades.map((unidad, index) => (\r\n                <div key={index} className=\"unidad-box\">\r\n                    <label>Movil:</label>\r\n                    <Select\r\n                        options={movilesOptions.map((movil) => ({\r\n                            value: movil.value,\r\n                            label: movil.label,\r\n                            isOccupied: getAvailability('movil', movil.value),\r\n                        }))}\r\n                        styles={customStyles}\r\n                        onChange={(selectedOption) => handleArrayInputChange(selectedOption.value, index, 'movil', 'unidades')}\r\n                        value={movilesOptions.find((movil) => movil.value === unidad.movil)}\r\n                        placeholder=\"Seleccione un móvil...\"\r\n                    />\r\n                    {unidad.choferes.map((choferValue, choferIndex) => (\r\n                        <div key={choferIndex}>\r\n                            <label>{`Chofer ${choferIndex + 1}:`}</label>\r\n                            <Select\r\n                                options={choferesOptions.map((choferOption) => ({\r\n                                    value: choferOption.value,\r\n                                    label: choferOption.label,\r\n                                    isOccupied: getAvailability('chofer', choferOption.value),\r\n                                }))}\r\n                                styles={customStyles}\r\n                                onChange={(selectedOption) => handleChoferInputChange(selectedOption.value, index, choferIndex)}\r\n                                value={choferesOptions.find((c) => c.value === choferValue)}\r\n                                placeholder=\"Seleccione un chofer...\"\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                    {/* Botón para eliminar unidad */}\r\n                    <button onClick={() => removeUnidad(index)} className=\"button delete-btn\">Eliminar Unidad</button>\r\n                </div>\r\n            ))}\r\n\r\n            <button onClick={addUnidad} className=\"button add-more-btn\">+ Añadir otra unidad</button>\r\n\r\n            <label>Origen:</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"origen\"\r\n                value={formData.origen}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Destino:</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"destino\"\r\n                value={formData.destino}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Horario:</label>\r\n            <input\r\n                type=\"time\"\r\n                name=\"horario\"\r\n                value={formData.horario}\r\n                onChange={handleInputChange}\r\n            />\r\n            <label>Observaciones:</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"observaciones\"\r\n                value={formData.observaciones}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n            {editingService ? (\r\n                <button onClick={updateService} className=\"button save-btn\">Actualizar Servicio</button>\r\n            ) : (\r\n                <button onClick={saveService} className=\"button save-btn\">Guardar Servicio</button>\r\n            )}\r\n            <button onClick={() => {\r\n                setShowForm(null);\r\n                setEditingService(null);\r\n                setFormData(initialFormData);\r\n            }} className=\"button cancel-btn\">Cerrar</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ServiceModal = ({ expandedService, setExpandedService, editService, isAuthenticated, deleteService }) => {\r\n    // Obtener el color asociado al tipo de servicio\r\n    const serviceOption = servicioOptions.find(option => option.value === expandedService.servicio);\r\n    const serviceColor = serviceOption ? serviceOption.color : '#FFFFFF';\r\n\r\n    // Definir dateKey aquí\r\n    const dateKey = `${expandedService.year}-${expandedService.month}-${expandedService.day}`;\r\n\r\n    return (\r\n        <div className=\"modal-backdrop\" onClick={() => setExpandedService(null)}>\r\n            <div className=\"modal-content\" onClick={(e) => e.stopPropagation()} style={{ backgroundColor: serviceColor }}>\r\n                <h2>Detalles del Servicio</h2>\r\n                <p><strong>Cliente:</strong> {expandedService.cliente}</p>\r\n                <p><strong>Servicio:</strong> {serviceOption?.label}</p>\r\n                {expandedService.unidades?.map((unidad, index) => (\r\n                    <div key={index}>\r\n                        <p><strong>Móvil:</strong> <span className=\"movil-highlight-modal\">{unidad.movil}</span></p>\r\n                        {unidad.choferes.map((chofer, choferIndex) => (\r\n                            <p key={choferIndex}><strong>Chofer {choferIndex + 1}:</strong> {chofer}</p>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n                <p><strong>Origen:</strong> {expandedService.origen} - <strong>Destino:</strong> {expandedService.destino}</p>\r\n                <p><strong>Horario:</strong> {expandedService.horario}</p>\r\n                <p><strong>Observaciones:</strong> {expandedService.observaciones}</p>\r\n\r\n                {isAuthenticated && (\r\n                    <>\r\n                        <button\r\n                            className=\"button edit-btn\"\r\n                            onClick={() => {\r\n                                editService(expandedService);\r\n                                setExpandedService(null);\r\n                            }}\r\n                        >\r\n                            Editar\r\n                        </button>\r\n                        <button\r\n                            className=\"button delete-btn\"\r\n                            onClick={() => deleteService(expandedService.id, dateKey)}\r\n                        >\r\n                            Eliminar\r\n                        </button>\r\n                    </>\r\n                )}\r\n                <button className=\"button close-btn\" onClick={() => setExpandedService(null)}>\r\n                    Cerrar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Semaforo = ({ selectedDate, choferesList, movilesList, services }) => {\r\n    // Formatear la fecha seleccionada\r\n    const year = selectedDate.getFullYear();\r\n    const month = selectedDate.getMonth() + 1; // Los meses en JavaScript van de 0 a 11\r\n    const day = selectedDate.getDate();\r\n    const dateKey = `${year}-${month}-${day}`;\r\n\r\n    const servicesForDay = services[dateKey] || [];\r\n\r\n    // Obtener listas de choferes y móviles ocupados\r\n    const choferesOcupados = new Set();\r\n    const movilesOcupados = new Set();\r\n\r\n    servicesForDay.forEach(service => {\r\n        service.unidades.forEach(unidad => {\r\n            if (unidad.movil) {\r\n                movilesOcupados.add(unidad.movil);\r\n            }\r\n            unidad.choferes.forEach(chofer => {\r\n                if (chofer) {\r\n                    choferesOcupados.add(chofer);\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n    // Opciones para los selectores\r\n    const choferesSemaforoOptions = choferesList.map(chofer => ({\r\n        value: chofer,\r\n        label: chofer,\r\n        isOccupied: choferesOcupados.has(chofer)\r\n    }));\r\n\r\n    const movilesSemaforoOptions = movilesList.map(movil => ({\r\n        value: movil,\r\n        label: movil,\r\n        isOccupied: movilesOcupados.has(movil)\r\n    }));\r\n\r\n    // Estilos para react-select\r\n    const customStyles = {\r\n        option: (provided, { data }) => ({\r\n            ...provided,\r\n            color: data.isOccupied ? 'red' : 'green',\r\n        }),\r\n        multiValueLabel: (provided, { data }) => ({\r\n            ...provided,\r\n            color: data.isOccupied ? 'red' : 'green',\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <div className=\"semaforo-dropdowns\">\r\n            <h2>Disponibilidad para {day}/{month}/{year}</h2>\r\n            <div className=\"semaforo-dropdown\">\r\n                <label>Choferes:</label>\r\n                <Select\r\n                    options={choferesSemaforoOptions}\r\n                    styles={customStyles}\r\n                    isMulti\r\n                    isClearable\r\n                    placeholder=\"Seleccione choferes...\"\r\n                />\r\n            </div>\r\n            <div className=\"semaforo-dropdown\">\r\n                <label>Móviles:</label>\r\n                <Select\r\n                    options={movilesSemaforoOptions}\r\n                    styles={customStyles}\r\n                    isMulti\r\n                    isClearable\r\n                    placeholder=\"Seleccione móviles...\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoginForm = ({ handleLogin, setShowLoginForm }) => {\r\n    const [password, setPassword] = useState('');\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleLogin(password);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal-backdrop\" onClick={() => setShowLoginForm(false)}>\r\n            <div className=\"modal-content login-modal\" onClick={(e) => e.stopPropagation()}>\r\n                <h2>Iniciar Sesión</h2>\r\n                <form onSubmit={onSubmit} className=\"login-form\">\r\n                    <label>Contraseña:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <button type=\"submit\" className=\"button login-submit-btn\">Entrar</button>\r\n                </form>\r\n                <button className=\"button close-btn\" onClick={() => setShowLoginForm(false)}>\r\n                    Cerrar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction App() {\r\n    const currentYear = new Date().getFullYear();\r\n    const currentMonth = new Date().getMonth() + 1;\r\n    const currentDay = new Date().getDate();\r\n\r\n    const [viewedMonthIndex, setViewedMonthIndex] = useState(currentMonth - 1);\r\n    const [services, setServices] = useState({});\r\n    const [showForm, setShowForm] = useState(null);\r\n    const [editingService, setEditingService] = useState(null);\r\n    const [expandedService, setExpandedService] = useState(null);\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [filters, setFilters] = useState({ chofer: null, movil: null });\r\n    const [selectedSemaforoDate, setSelectedSemaforoDate] = useState(new Date());\r\n\r\n    const [reportFilterType, setReportFilterType] = useState('cliente');\r\n    const [reportFilterValue, setReportFilterValue] = useState(null);\r\n    const [reportStartDate, setReportStartDate] = useState(null);\r\n    const [reportEndDate, setReportEndDate] = useState(null);\r\n\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [showLoginForm, setShowLoginForm] = useState(false);\r\n\r\n    const daysInYear = useMemo(() => {\r\n        let days = [];\r\n        for (let month = 1; month <= 12; month++) {\r\n            const daysInMonth = new Date(currentYear, month, 0).getDate();\r\n            for (let day = 1; day <= daysInMonth; day++) {\r\n                days.push({ day, month, year: currentYear });\r\n            }\r\n        }\r\n        return days;\r\n    }, [currentYear]);\r\n\r\n    const scrollContainerRef = useRef(null);\r\n\r\n    const fetchServices = async () => {\r\n        const { data: servicesData, error } = await supabase\r\n            .from('services')\r\n            .select('*');\r\n        if (error) {\r\n            console.error('Error al obtener los servicios:', error);\r\n        } else {\r\n            const formattedServices = servicesData.reduce((acc, service) => {\r\n                const dateKey = `${service.year}-${service.month}-${service.day}`;\r\n\r\n                const updatedService = {\r\n                    ...service,\r\n                };\r\n\r\n                if (!acc[dateKey]) {\r\n                    acc[dateKey] = [];\r\n                }\r\n                acc[dateKey].push(updatedService);\r\n                return acc;\r\n            }, {});\r\n            setServices(formattedServices);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchServices();\r\n\r\n        const subscription = supabase\r\n            .channel('public:services')\r\n            .on('postgres_changes', { event: '*', schema: 'public', table: 'services' }, (payload) => {\r\n                console.log('Cambio en tiempo real:', payload);\r\n                const oldServiceData = payload.old || {};\r\n                const newServiceData = payload.new || {};\r\n                const oldDateKey = `${oldServiceData.year}-${oldServiceData.month}-${oldServiceData.day}`;\r\n                const newDateKey = `${newServiceData.year}-${newServiceData.month}-${newServiceData.day}`;\r\n\r\n                setServices((prevServices) => {\r\n                    const updatedServices = { ...prevServices };\r\n                    switch (payload.eventType) {\r\n                        case 'INSERT':\r\n                            if (!updatedServices[newDateKey]) {\r\n                                updatedServices[newDateKey] = [];\r\n                            }\r\n                            updatedServices[newDateKey].push(newServiceData);\r\n                            break;\r\n                        case 'UPDATE':\r\n                            // Eliminar de todos los dateKeys posibles\r\n                            Object.keys(updatedServices).forEach(key => {\r\n                                updatedServices[key] = updatedServices[key].filter(service => service.id !== newServiceData.id);\r\n                                if (updatedServices[key].length === 0) {\r\n                                    delete updatedServices[key];\r\n                                }\r\n                            });\r\n                            // Agregar al nuevo dateKey\r\n                            if (!updatedServices[newDateKey]) {\r\n                                updatedServices[newDateKey] = [];\r\n                            }\r\n                            updatedServices[newDateKey].push(newServiceData);\r\n                            break;\r\n                        case 'DELETE':\r\n                            if (updatedServices[oldDateKey]) {\r\n                                updatedServices[oldDateKey] = updatedServices[oldDateKey].filter(service => service.id !== oldServiceData.id);\r\n                                if (updatedServices[oldDateKey].length === 0) {\r\n                                    delete updatedServices[oldDateKey];\r\n                                }\r\n                            }\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    return updatedServices;\r\n                });\r\n            })\r\n            .subscribe();\r\n\r\n        return () => {\r\n            supabase.removeChannel(subscription);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Desplazar al día actual solo al cargar la aplicación\r\n        const scrollContainer = scrollContainerRef.current;\r\n        if (scrollContainer && !showForm && !editingService && !expandedService) {\r\n            const currentDayIndex = daysInYear.findIndex(day => day.month === currentMonth && day.day === currentDay);\r\n            if (currentDayIndex !== -1) {\r\n                const dayCardWidth = scrollContainer.scrollWidth / daysInYear.length;\r\n                scrollContainer.scrollTo({\r\n                    left: currentDayIndex * dayCardWidth,\r\n                    behavior: 'smooth',\r\n                });\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [daysInYear, currentMonth, currentDay, showForm, editingService, expandedService]);\r\n\r\n    // Estados para el arrastre\r\n    const [isDragging, setIsDragging] = useState(false);\r\n    const [startXDrag, setStartXDrag] = useState(0);\r\n    const [scrollLeftDrag, setScrollLeftDrag] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const scrollContainer = scrollContainerRef.current;\r\n        if (!scrollContainer) return;\r\n\r\n        let isDown = false;\r\n        let startX;\r\n        let scrollLeftPos;\r\n\r\n        const mouseDownHandler = (e) => {\r\n            isDown = true;\r\n            scrollContainer.classList.add('active');\r\n            startX = e.pageX - scrollContainer.offsetLeft;\r\n            scrollLeftPos = scrollContainer.scrollLeft;\r\n        };\r\n\r\n        const mouseLeaveHandler = () => {\r\n            isDown = false;\r\n            scrollContainer.classList.remove('active');\r\n        };\r\n\r\n        const mouseUpHandler = () => {\r\n            isDown = false;\r\n            scrollContainer.classList.remove('active');\r\n        };\r\n\r\n        const mouseMoveHandler = (e) => {\r\n            if (!isDown) return;\r\n            e.preventDefault();\r\n            const x = e.pageX - scrollContainer.offsetLeft;\r\n            const walk = (x - startX) * 1; // Ajusta el multiplicador según la velocidad que desees\r\n            scrollContainer.scrollLeft = scrollLeftPos - walk;\r\n        };\r\n\r\n        // Manejadores para dispositivos táctiles\r\n        const touchStartHandler = (e) => {\r\n            isDown = true;\r\n            scrollContainer.classList.add('active');\r\n            startX = e.touches[0].pageX - scrollContainer.offsetLeft;\r\n            scrollLeftPos = scrollContainer.scrollLeft;\r\n        };\r\n\r\n        const touchEndHandler = () => {\r\n            isDown = false;\r\n            scrollContainer.classList.remove('active');\r\n        };\r\n\r\n        const touchMoveHandler = (e) => {\r\n            if (!isDown) return;\r\n            const x = e.touches[0].pageX - scrollContainer.offsetLeft;\r\n            const walk = (x - startX) * 1; // Ajusta el multiplicador según la velocidad que desees\r\n            scrollContainer.scrollLeft = scrollLeftPos - walk;\r\n        };\r\n\r\n        scrollContainer.addEventListener('mousedown', mouseDownHandler);\r\n        scrollContainer.addEventListener('mouseleave', mouseLeaveHandler);\r\n        scrollContainer.addEventListener('mouseup', mouseUpHandler);\r\n        scrollContainer.addEventListener('mousemove', mouseMoveHandler);\r\n\r\n        scrollContainer.addEventListener('touchstart', touchStartHandler);\r\n        scrollContainer.addEventListener('touchend', touchEndHandler);\r\n        scrollContainer.addEventListener('touchmove', touchMoveHandler);\r\n\r\n        return () => {\r\n            scrollContainer.removeEventListener('mousedown', mouseDownHandler);\r\n            scrollContainer.removeEventListener('mouseleave', mouseLeaveHandler);\r\n            scrollContainer.removeEventListener('mouseup', mouseUpHandler);\r\n            scrollContainer.removeEventListener('mousemove', mouseMoveHandler);\r\n\r\n            scrollContainer.removeEventListener('touchstart', touchStartHandler);\r\n            scrollContainer.removeEventListener('touchend', touchEndHandler);\r\n            scrollContainer.removeEventListener('touchmove', touchMoveHandler);\r\n        };\r\n    }, []);\r\n\r\n    const saveServiceToDatabase = async (serviceData) => {\r\n        const dataToSave = {\r\n            ...serviceData,\r\n        };\r\n\r\n        const { error } = await supabase\r\n            .from('services')\r\n            .insert([dataToSave]);\r\n\r\n        if (error) {\r\n            console.error('Error al guardar el servicio:', error);\r\n            alert(`Error al guardar el servicio: ${error.message}`);\r\n        } else {\r\n            alert('Servicio guardado exitosamente.');\r\n        }\r\n    };\r\n\r\n    const updateServiceInDatabase = async (serviceData) => {\r\n        const { id, ...rest } = serviceData;\r\n\r\n        const { data, error } = await supabase\r\n            .from('services')\r\n            .update(rest)\r\n            .eq('id', id);\r\n\r\n        if (error) {\r\n            console.error('Error al actualizar el servicio:', error);\r\n            alert(`Error al actualizar el servicio: ${error.message}`);\r\n        } else {\r\n            alert('Servicio actualizado exitosamente.');\r\n            // Actualizar el estado local\r\n            setServices(prevServices => {\r\n                const updatedServices = { ...prevServices };\r\n                const dateKey = `${rest.year}-${rest.month}-${rest.day}`;\r\n\r\n                // Remover el servicio de su ubicación anterior si cambió de fecha\r\n                Object.keys(updatedServices).forEach(key => {\r\n                    updatedServices[key] = updatedServices[key].filter(service => service.id !== id);\r\n                    if (updatedServices[key].length === 0) {\r\n                        delete updatedServices[key];\r\n                    }\r\n                });\r\n\r\n                // Añadir el servicio actualizado a la nueva fecha\r\n                if (!updatedServices[dateKey]) {\r\n                    updatedServices[dateKey] = [];\r\n                }\r\n                updatedServices[dateKey].push({ ...rest, id });\r\n\r\n                return updatedServices;\r\n            });\r\n        }\r\n    };\r\n\r\n    const deleteService = async (serviceId, dateKey) => {\r\n        if (!window.confirm('¿Estás seguro de que deseas eliminar este servicio?')) {\r\n            return;\r\n        }\r\n\r\n        const { error } = await supabase\r\n            .from('services')\r\n            .delete()\r\n            .eq('id', serviceId);\r\n\r\n        if (error) {\r\n            console.error('Error al eliminar el servicio:', error);\r\n            alert(`Error al eliminar el servicio: ${error.message}`);\r\n        } else {\r\n            alert('Servicio eliminado exitosamente.');\r\n            // Actualizar el estado local\r\n            setServices(prevServices => {\r\n                const updatedServices = { ...prevServices };\r\n                if (updatedServices[dateKey]) {\r\n                    updatedServices[dateKey] = updatedServices[dateKey].filter(service => service.id !== serviceId);\r\n                    if (updatedServices[dateKey].length === 0) {\r\n                        delete updatedServices[dateKey];\r\n                    }\r\n                }\r\n                return updatedServices;\r\n            });\r\n            setExpandedService(null); // Cerrar el modal después de eliminar\r\n        }\r\n    };\r\n\r\n    const addUnidad = () => {\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            unidades: [\r\n                ...prevData.unidades,\r\n                { movil: '', choferes: ['', '', ''] }\r\n            ]\r\n        }));\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleArrayInputChange = (value, index, field, type) => {\r\n        const updatedData = formData[type].map((item, i) =>\r\n            i === index ? { ...item, [field]: value } : item\r\n        );\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [type]: updatedData,\r\n        }));\r\n    };\r\n\r\n    const handleChoferInputChange = (value, unidadIndex, choferIndex) => {\r\n        const updatedChoferes = [...formData.unidades[unidadIndex].choferes];\r\n        updatedChoferes[choferIndex] = value;\r\n        const updatedUnidades = [...formData.unidades];\r\n        updatedUnidades[unidadIndex].choferes = updatedChoferes;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            unidades: updatedUnidades\r\n        }));\r\n    };\r\n\r\n    const saveService = () => {\r\n        if (!showForm) return; // Prevent if no dateKey\r\n\r\n        const [year, month, day] = showForm.split('-');\r\n        const serviceData = {\r\n            ...formData,\r\n            year: parseInt(year),\r\n            month: parseInt(month),\r\n            day: parseInt(day),\r\n        };\r\n        saveServiceToDatabase(serviceData);\r\n        setShowForm(null);\r\n        setFormData(initialFormData);\r\n    };\r\n\r\n    const updateService = () => {\r\n        const serviceData = {\r\n            ...formData,\r\n            id: editingService.id,\r\n        };\r\n        updateServiceInDatabase(serviceData);\r\n        setShowForm(null);\r\n        setEditingService(null);\r\n        setFormData(initialFormData);\r\n    };\r\n\r\n    const editService = (service) => {\r\n        setFormData({\r\n            cliente: service.cliente,\r\n            servicio: service.servicio,\r\n            unidades: service.unidades,\r\n            origen: service.origen,\r\n            destino: service.destino,\r\n            horario: service.horario,\r\n            observaciones: service.observaciones,\r\n            year: service.year,\r\n            month: service.month,\r\n            day: service.day,\r\n        });\r\n        setEditingService(service);\r\n        setShowForm(`${service.year}-${service.month}-${service.day}`);\r\n    };\r\n\r\n    const jumpToMonth = (event) => {\r\n        const selectedMonth = parseInt(event.target.value, 10) + 1; // +1 porque los meses en JavaScript son 0-based\r\n        setViewedMonthIndex(selectedMonth - 1);\r\n        const firstDayOfMonthIndex = daysInYear.findIndex(day => day.month === selectedMonth && day.day === 1);\r\n        const scrollContainer = scrollContainerRef.current;\r\n        if (scrollContainer) {\r\n            const dayCardWidth = scrollContainer.clientWidth / getDaysPerView();\r\n            scrollContainer.scrollTo({\r\n                left: firstDayOfMonthIndex * dayCardWidth,\r\n                behavior: 'smooth'\r\n            });\r\n        }\r\n    };\r\n\r\n    const getDaysPerView = () => {\r\n        const width = window.innerWidth;\r\n        if (width >= 1200) return 7; // Pantallas grandes\r\n        if (width >= 768) return 5;  // Pantallas medianas\r\n        return 2;                    // Pantallas pequeñas\r\n    };\r\n\r\n    // Obtener el nombre del mes actual\r\n    const displayedMonthName = monthsOfYear[viewedMonthIndex];\r\n\r\n    const addService = (dateKey) => {\r\n        setFormData(initialFormData);\r\n        setEditingService(null);\r\n        setShowForm(dateKey);\r\n    };\r\n\r\n    // Funciones para los botones de navegación\r\n    const scrollLeftFunc = () => {\r\n        const scrollContainer = scrollContainerRef.current;\r\n        if (scrollContainer) {\r\n            const dayCardWidth = scrollContainer.clientWidth / getDaysPerView();\r\n            scrollContainer.scrollBy({\r\n                left: -dayCardWidth,\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n    };\r\n\r\n    const scrollRightFunc = () => {\r\n        const scrollContainer = scrollContainerRef.current;\r\n        if (scrollContainer) {\r\n            const dayCardWidth = scrollContainer.clientWidth / getDaysPerView();\r\n            scrollContainer.scrollBy({\r\n                left: dayCardWidth,\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n    };\r\n\r\n    // Manejo de filtros\r\n    const handleFilterChange = (selectedOption, filterType) => {\r\n        setFilters(prevFilters => ({\r\n            ...prevFilters,\r\n            [filterType]: selectedOption ? selectedOption.value : null\r\n        }));\r\n    };\r\n\r\n    // Manejo del cambio de fecha en el semáforo\r\n    const handleSemaforoDateChange = (e) => {\r\n        const selectedDate = new Date(e.target.value + 'T00:00:00');\r\n        setSelectedSemaforoDate(selectedDate);\r\n    };\r\n\r\n    // Función para generar informes en PDF\r\n    const generatePDFReport = () => {\r\n        if (!reportStartDate || !reportEndDate) {\r\n            alert('Por favor, seleccione una fecha de inicio y una fecha de fin para el informe.');\r\n            return;\r\n        }\r\n\r\n        let filteredServices = [];\r\n\r\n        // Filtrar servicios dentro del rango de fechas seleccionado\r\n        for (let dateKey in services) {\r\n            const [year, month, day] = dateKey.split('-').map(Number);\r\n            const serviceDate = new Date(year, month - 1, day);\r\n            if (serviceDate >= reportStartDate && serviceDate <= reportEndDate) {\r\n                filteredServices = filteredServices.concat(services[dateKey]);\r\n            }\r\n        }\r\n\r\n        // Aplicar filtro adicional (cliente, chofer o móvil)\r\n        if (reportFilterValue) {\r\n            filteredServices = filteredServices.filter(service => {\r\n                if (reportFilterType === 'cliente') {\r\n                    return service.cliente === reportFilterValue;\r\n                } else if (reportFilterType === 'chofer') {\r\n                    return service.unidades.some(unidad => unidad.choferes.includes(reportFilterValue));\r\n                } else if (reportFilterType === 'movil') {\r\n                    return service.unidades.some(unidad => unidad.movil === reportFilterValue);\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n\r\n        if (filteredServices.length === 0) {\r\n            alert('No se encontraron servicios en el rango de fechas seleccionado.');\r\n            return;\r\n        }\r\n\r\n        // Generar el PDF\r\n        const doc = new jsPDF();\r\n        doc.setFontSize(18);\r\n        doc.text(`Informe desde ${reportStartDate.toLocaleDateString()} hasta ${reportEndDate.toLocaleDateString()}`, 14, 22);\r\n\r\n        const tableColumn = [\"Fecha\", \"Cliente\", \"Servicio\", \"Unidades\", \"Origen\", \"Destino\", \"Horario\", \"Observaciones\"];\r\n        const tableRows = [];\r\n\r\n        filteredServices.forEach(service => {\r\n            const serviceDate = `${service.day}/${service.month}/${service.year}`;\r\n            const unidades = service.unidades.map(unidad => {\r\n                const movil = `Móvil: ${unidad.movil}`;\r\n                const choferes = unidad.choferes.filter(Boolean).map(chofer => `Chofer: ${chofer}`).join(\", \");\r\n                return `${movil}, ${choferes}`;\r\n            }).join(\" | \");\r\n\r\n            const rowData = [\r\n                serviceDate,\r\n                service.cliente,\r\n                service.servicio,\r\n                unidades,\r\n                service.origen,\r\n                service.destino,\r\n                service.horario,\r\n                service.observaciones\r\n            ];\r\n            tableRows.push(rowData);\r\n        });\r\n\r\n        doc.autoTable({\r\n            head: [tableColumn],\r\n            body: tableRows,\r\n            startY: 30,\r\n            styles: { fontSize: 10 },\r\n            columnStyles: {\r\n                3: { cellWidth: 'auto' } // \"Unidades\" column\r\n            }\r\n        });\r\n        doc.save(`informe_${reportStartDate.toLocaleDateString()}_al_${reportEndDate.toLocaleDateString()}.pdf`);\r\n    };\r\n\r\n    const handleLogin = (password) => {\r\n        const correctPassword = 'admin123'; // Reemplaza con la contraseña deseada\r\n        if (password === correctPassword) {\r\n            setIsAuthenticated(true);\r\n            setShowLoginForm(false);\r\n        } else {\r\n            alert('Contraseña incorrecta');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <header className=\"header\">\r\n                <h1>Planificación de Servicios</h1>\r\n                {!isAuthenticated && (\r\n                    <button className=\"button login-btn\" onClick={() => setShowLoginForm(true)}>\r\n                        Iniciar Sesión\r\n                    </button>\r\n                )}\r\n                {isAuthenticated && (\r\n                    <button className=\"button logout-btn\" onClick={() => setIsAuthenticated(false)}>\r\n                        Cerrar Sesión\r\n                    </button>\r\n                )}\r\n            </header>\r\n\r\n            {showLoginForm && (\r\n                <LoginForm\r\n                    handleLogin={handleLogin}\r\n                    setShowLoginForm={setShowLoginForm}\r\n                />\r\n            )}\r\n\r\n            {!showForm && (\r\n                <>\r\n                    <h2 className=\"month-viewing\">Visualizando: {displayedMonthName}</h2>\r\n\r\n                    <div className=\"controls-container\">\r\n                        {/* Selector de mes */}\r\n                        <div className=\"month-selector\">\r\n                            <label htmlFor=\"monthSelector\">Ir al mes: </label>\r\n                            <select id=\"monthSelector\" onChange={jumpToMonth} value={viewedMonthIndex}>\r\n                                {monthsOfYear.map((monthName, i) => (\r\n                                    <option key={i} value={i}>\r\n                                        {monthName}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n\r\n                        {/* Filtros */}\r\n                        <div className=\"filters\">\r\n                            <div className=\"filter\">\r\n                                <label>Filtrar por Chofer:</label>\r\n                                <Select\r\n                                    options={choferesOptions}\r\n                                    onChange={(option) => handleFilterChange(option, 'chofer')}\r\n                                    isClearable\r\n                                    placeholder=\"Seleccione un chofer...\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"filter\">\r\n                                <label>Filtrar por Móvil:</label>\r\n                                <Select\r\n                                    options={movilesOptions}\r\n                                    onChange={(option) => handleFilterChange(option, 'movil')}\r\n                                    isClearable\r\n                                    placeholder=\"Seleccione un móvil...\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {isAuthenticated && (\r\n                            <>\r\n                                {/* Semáforo y selector de fecha */}\r\n                                <div className=\"semaforo-section\">\r\n                                    <div className=\"semaforo-date-selector\">\r\n                                        <label>Seleccionar fecha para disponibilidad:</label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={formatDateForInput(selectedSemaforoDate)}\r\n                                            onChange={handleSemaforoDateChange}\r\n                                        />\r\n                                    </div>\r\n                                    <Semaforo\r\n                                        selectedDate={selectedSemaforoDate}\r\n                                        choferesList={choferesList}\r\n                                        movilesList={movilesList}\r\n                                        services={services}\r\n                                    />\r\n                                </div>\r\n\r\n                                {/* Generación de informes */}\r\n                                <div className=\"report-section\">\r\n                                    <label>Generar informe:</label>\r\n                                    <div className=\"report-date-selectors\">\r\n                                        <label>Fecha de inicio:</label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={reportStartDate ? formatDateForInput(reportStartDate) : ''}\r\n                                            onChange={(e) => setReportStartDate(new Date(e.target.value + 'T00:00:00'))}\r\n                                        />\r\n                                        <label>Fecha de fin:</label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={reportEndDate ? formatDateForInput(reportEndDate) : ''}\r\n                                            onChange={(e) => setReportEndDate(new Date(e.target.value + 'T23:59:59'))}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <select value={reportFilterType} onChange={(e) => { setReportFilterType(e.target.value); setReportFilterValue(null); }}>\r\n                                        <option value=\"cliente\">Por Cliente</option>\r\n                                        <option value=\"chofer\">Por Chofer</option>\r\n                                        <option value=\"movil\">Por Móvil</option>\r\n                                    </select>\r\n\r\n                                    {reportFilterType === 'cliente' && (\r\n                                        <Select\r\n                                            options={[...new Set(Object.values(services).flat().map(s => s.cliente))].map(cliente => ({ value: cliente, label: cliente }))}\r\n                                            onChange={(option) => setReportFilterValue(option ? option.value : null)}\r\n                                            isClearable\r\n                                            placeholder=\"Seleccione un cliente...\"\r\n                                            className=\"report-filter-select\"\r\n                                        />\r\n                                    )}\r\n\r\n                                    {reportFilterType === 'chofer' && (\r\n                                        <Select\r\n                                            options={choferesOptions}\r\n                                            onChange={(option) => setReportFilterValue(option ? option.value : null)}\r\n                                            isClearable\r\n                                            placeholder=\"Seleccione un chofer...\"\r\n                                            className=\"report-filter-select\"\r\n                                        />\r\n                                    )}\r\n\r\n                                    {reportFilterType === 'movil' && (\r\n                                        <Select\r\n                                            options={movilesOptions}\r\n                                            onChange={(option) => setReportFilterValue(option ? option.value : null)}\r\n                                            isClearable\r\n                                            placeholder=\"Seleccione un móvil...\"\r\n                                            className=\"report-filter-select\"\r\n                                        />\r\n                                    )}\r\n\r\n                                    <button onClick={generatePDFReport} className=\"button report-btn\">Generar Informe PDF</button>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Botones de navegación en los extremos */}\r\n                    <div className=\"slider-container\">\r\n                        <button className=\"nav-button left-button\" onClick={scrollLeftFunc}>\r\n                            Anterior\r\n                        </button>\r\n\r\n                        <div id=\"days-scroll-container\" className=\"days-scroll-container\" ref={scrollContainerRef}>\r\n                            {daysInYear.map((dayData) => {\r\n                                const dateKey = `${dayData.year}-${dayData.month}-${dayData.day}`;\r\n                                const servicesForDay = services[dateKey];\r\n                                return (\r\n                                    <DayCard\r\n                                        key={dateKey}\r\n                                        dayData={dayData}\r\n                                        dateKey={dateKey}\r\n                                        servicesForDay={servicesForDay}\r\n                                        addService={addService}\r\n                                        setExpandedService={setExpandedService}\r\n                                        filters={filters}\r\n                                        services={services}\r\n                                        isAuthenticated={isAuthenticated}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n\r\n                        <button className=\"nav-button right-button\" onClick={scrollRightFunc}>\r\n                            Siguiente\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            {showForm && (\r\n                <ServiceForm\r\n                    editingService={editingService}\r\n                    formData={formData}\r\n                    setFormData={setFormData}\r\n                    addUnidad={addUnidad}\r\n                    handleInputChange={handleInputChange}\r\n                    handleArrayInputChange={handleArrayInputChange}\r\n                    handleChoferInputChange={handleChoferInputChange}\r\n                    saveService={saveService}\r\n                    updateService={updateService}\r\n                    setShowForm={setShowForm}\r\n                    setEditingService={setEditingService}\r\n                    services={services}\r\n                    showForm={showForm}\r\n                />\r\n            )}\r\n\r\n            {expandedService && (\r\n                <ServiceModal\r\n                    expandedService={expandedService}\r\n                    setExpandedService={setExpandedService}\r\n                    editService={editService}\r\n                    isAuthenticated={isAuthenticated}\r\n                    deleteService={deleteService}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}